name:                             Build Release Test Suite1

on:
 push:
   
jobs:
    build-tests:
      name:                       Build Release Test
      strategy:
        matrix:
          platform:
            - ubuntu-16.04
            - macos-latest
            - windows-latest
          toolchain:
            - stable
      runs-on:                    ${{ matrix.platform }}
      steps:
        - name:                   Checkout sources
          uses:                   actions/checkout@v2
          with:
            fetch-depth:          50
        - name:                   Checkout submodules
          shell:                  bash
          run:                    git submodule update --init --recursive
        - name:                   Install toolchain
          uses:                   actions-rs/toolchain@v1
          with:
            toolchain:            ${{ matrix.toolchain }}
            override:             true
        - name:                   Cache cargo registry
          uses:                   actions/cache@v1.1.2
          with:
            path:                 ~/.cargo/registry
            key:                  ${{ runner.os }}-cargo-registry-build-tests-${{ hashFiles('**/Cargo.lock') }}
        - name:                   Cache cargo index
          uses:                   actions/cache@v1.1.2
          with:
            path:                 ~/.cargo/git
            key:                  ${{ runner.os }}-cargo-git-build-tests-${{ hashFiles('**/Cargo.lock') }}
        - name:                   Cache cargo build
          uses:                   actions/cache@v1.1.2
          with:
            path:                 target
            key:                  ${{ runner.os }}-cargo-build-target-build-tests-${{ hashFiles('**/Cargo.lock') }}
        - name:                   Install sccache for ${{ matrix.platform }}
          env:
            SCCACHE_CACHE_SIZE:   "1G"
            SCCACHE_IDLE_TIMEOUT: 0
          shell:                  pwsh
          run:                    |
            $version = "0.2.12"
            $platform =
              @{ "macOS"   = "x86_64-apple-darwin"
                 "Linux"   = "x86_64-unknown-linux-musl"
                 "Windows" = "x86_64-pc-windows-msvc"
               }.${{ runner.os }}
            $basename = "sccache-$version-$platform"
            $url = "https://github.com/mozilla/sccache/releases/download/" +
                   "$version/$basename.tar.gz"
            curl -LO $url
            tar -xzvf "$basename.tar.gz"
            . $basename/sccache --start-server
            echo "::add-path::$(pwd)/$basename"
            echo "::set-env name=RUSTC_WRAPPER::sccache"
        - name:                   Cache sccache linux
          if:                     matrix.platform == 'ubuntu-16.04'
          uses:                   actions/cache@v1.1.2
          with:
            path:                 ~/.cache/sccache
            key:                  ${{ runner.os }}-sccache-build-tests-${{ hashFiles('**/Cargo.lock') }}
        - name:                   Cache sccache MacOS
          if:                     matrix.platform == 'macos-latest'
          uses:                   actions/cache@v1.1.2
          with:
            path:                 ~/Library/Caches/Mozilla.sccache
            key:                  ${{ runner.os }}-sccache-build-tests-${{ hashFiles('**/Cargo.lock') }}
        - name:                   Cache sccache Windows
          if:                     matrix.platform == 'windows-latest'
          uses:                   actions/cache@v1.1.2
          with:
            path:                 "C:\\Users\\runneradmin\\AppData\\Local\\Mozilla\\sccache\\cache"
            key:                  ${{ runner.os }}-sccache-build-tests-${{ hashFiles('**/Cargo.lock') }}
        - name:                   Install LLVM for Windows
          if:                     matrix.platform == 'windows-latest'
          run:                    choco install llvm
        - name:                   Build tests
          uses:                   actions-rs/cargo@v1
          with:
            command:              test
            args:                 --locked --all --release --features "json-tests" --verbose --no-run
        - name:                   Sccache statistics
          run:                    sccache --show-stats
        - name:                   Prepare build directory for cache
          if:                     matrix.platform != 'windows-latest'
          run:                    |
            find ./target/release -maxdepth 1 -type f -delete;
            rm -fr ./target/release/{deps,.fingerprint}/*{parity,ethcore,ethkey,ethstore,parity-evm}*;
            rm -f  ./target/.rustc_info.json;
        - name:                   Stop sccache
          if:                     always()
          run:                    sccache --stop-server
